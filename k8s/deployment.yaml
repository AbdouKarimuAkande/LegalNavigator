
apiVersion: v1
kind: Namespace
metadata:
  name: lawhelp-production
  labels:
    name: lawhelp-production
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: lawhelp-config
  namespace: lawhelp-production
data:
  NODE_ENV: "production"
  PORT: "5000"
  DATABASE_URL: "postgresql://lawhelp:password@postgres:5432/lawhelp_db"
---
apiVersion: v1
kind: Secret
metadata:
  name: lawhelp-secrets
  namespace: lawhelp-production
type: Opaque
data:
  jwt-secret: "eW91ci1qd3Qtc2VjcmV0LWtleQ==" # your-jwt-secret-key (base64)
  database-password: "cGFzc3dvcmQ=" # password (base64)
  openai-api-key: "eW91ci1vcGVuYWktYXBpLWtleQ==" # your-openai-api-key (base64)
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lawhelp-app
  namespace: lawhelp-production
  labels:
    app: lawhelp
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: lawhelp
  template:
    metadata:
      labels:
        app: lawhelp
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5000"
        prometheus.io/path: "/api/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: lawhelp
        image: lawhelp:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: lawhelp-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: lawhelp-config
              key: PORT
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: lawhelp-secrets
              key: jwt-secret
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: lawhelp-config
              key: DATABASE_URL
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: lawhelp-secrets
              key: openai-api-key
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: lawhelp-service
  namespace: lawhelp-production
  labels:
    app: lawhelp
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 5000
    protocol: TCP
    name: http
  selector:
    app: lawhelp
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: lawhelp-hpa
  namespace: lawhelp-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: lawhelp-app
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15
      selectPolicy: Max
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lawhelp-ingress
  namespace: lawhelp-production
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
spec:
  tls:
  - hosts:
    - lawhelp.yourdomain.com
    secretName: lawhelp-tls
  rules:
  - host: lawhelp.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: lawhelp-service
            port:
              number: 80
