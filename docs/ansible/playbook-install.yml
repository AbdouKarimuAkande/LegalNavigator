
---
- name: Install and Configure LawHelp Application Infrastructure
  hosts: all
  become: yes
  vars:
    node_version: "20"
    mysql_root_password: "{{ vault_mysql_root_password }}"
    app_user: "lawhelp"
    app_directory: "/opt/lawhelp"
    
  tasks:
    - name: Update system packages
      apt:
        update_cache: yes
        upgrade: dist
      when: ansible_os_family == "Debian"

    - name: Install required system packages
      apt:
        name:
          - curl
          - wget
          - git
          - nginx
          - mysql-server
          - python3-pymysql
          - certbot
          - python3-certbot-nginx
          - htop
          - ufw
        state: present
      when: ansible_os_family == "Debian"

    - name: Create application user
      user:
        name: "{{ app_user }}"
        system: yes
        shell: /bin/bash
        home: "{{ app_directory }}"
        createhome: yes

    - name: Install Node.js using NodeSource repository
      shell: |
        curl -fsSL https://deb.nodesource.com/setup_{{ node_version }}.x | sudo -E bash -
        apt-get install -y nodejs
      args:
        creates: /usr/bin/node

    - name: Install PM2 globally
      npm:
        name: pm2
        global: yes

    - name: Install Docker
      shell: |
        curl -fsSL https://get.docker.com -o get-docker.sh
        sh get-docker.sh
        usermod -aG docker {{ app_user }}
      args:
        creates: /usr/bin/docker

    - name: Install Docker Compose
      pip:
        name: docker-compose
        state: present

    - name: Configure MySQL
      mysql_user:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        name: lawhelp_user
        password: "{{ vault_mysql_app_password }}"
        priv: "lawhelp_db.*:ALL"
        state: present

    - name: Create MySQL database
      mysql_db:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        name: lawhelp_db
        state: present

    - name: Configure firewall
      ufw:
        rule: allow
        port: "{{ item }}"
      loop:
        - "22"    # SSH
        - "80"    # HTTP
        - "443"   # HTTPS
        - "5000"  # Application

    - name: Enable firewall
      ufw:
        state: enabled

    - name: Configure Nginx as reverse proxy
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/sites-available/lawhelp
      notify: restart nginx

    - name: Enable Nginx site
      file:
        src: /etc/nginx/sites-available/lawhelp
        dest: /etc/nginx/sites-enabled/lawhelp
        state: link
      notify: restart nginx

    - name: Remove default Nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify: restart nginx

    - name: Create application directory
      file:
        path: "{{ app_directory }}"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0755'

    - name: Create logs directory
      file:
        path: "{{ app_directory }}/logs"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0755'

    - name: Create systemd service for application
      template:
        src: lawhelp.service.j2
        dest: /etc/systemd/system/lawhelp.service
      notify: 
        - reload systemd
        - restart lawhelp

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted

    - name: reload systemd
      systemd:
        daemon_reload: yes

    - name: restart lawhelp
      service:
        name: lawhelp
        state: restarted
